.{
    // This is the default name used by packages depending on this one. For
    // example, when a user runs `zig fetch --save <url>`, this field is used
    // as the key in the `dependencies` table. Although the user can choose a
    // different name, most users will stick with this provided value.
    //
    // It is redundant to include "zig" in this name because it is already
    // within the Zig package namespace.
    .name = "zorg",

    // This is a [Semantic Version](https://semver.org/).
    // In a future version of Zig it will be used for package deduplication.
    .version = "0.1.0",

    // This field is optional.
    // This is currently advisory only; Zig does not yet do anything
    // with this value.
    //.minimum_zig_version = "0.11.0",

    // This field is optional.
    // Each dependency must either provide a `url` and `hash`, or a `path`.
    // `zig build --fetch` can be used to fetch all dependencies of a package, recursively.
    // Once all dependencies are fetched, `zig build` no longer requires
    // internet connectivity.
    .dependencies = .{
        .zigglgen = .{
            .url = "https://github.com/BogdanFloris/zigglgen/archive/refs/tags/v0.3.1.tar.gz",
            .hash = "1220e023493245c7b4cf20e513fb510904e717122a7faa8467ccaaf19c1f5c952704",
        },
        .mach_glfw = .{
            .url = "https://github.com/BogdanFloris/mach-glfw/archive/refs/tags/0.14.0-dev.zip",
            .hash = "12206edddf96db8378dd94c8740c431e9e5fbbcb1df2f7cee44eab1c8b6caafa1948",
        },
    },
    .paths = .{
        "build.zig",
        "build.zig.zon",
        "src",
        // For example...
        //"LICENSE",
        //"README.md",
    },
}
